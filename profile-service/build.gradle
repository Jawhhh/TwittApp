plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'by.jawh'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven {
        url "https://jitpack.io"
    }
}

ext {
    set('springCloudVersion', "2023.0.2")
}

dependencies {

    // springboot
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0"
    // config
    implementation 'org.springframework.cloud:spring-cloud-starter-config'

    // utils
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'

    // netflix eureka
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    // other
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.liquibase:liquibase-core'
    implementation 'io.minio:minio:8.5.11'
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0"
    implementation 'com.github.Jawhhh:all-events-for-kafka:-SNAPSHOT'


    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
